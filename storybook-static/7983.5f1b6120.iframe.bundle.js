"use strict";(self.webpackChunkmy_button_project=self.webpackChunkmy_button_project||[]).push([[7983],{"./node_modules/@ant-design/icons/es/icons/CheckOutlined.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>icons_CheckOutlined});var esm_extends=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js"),react=__webpack_require__("./node_modules/react/index.js");const asn_CheckOutlined={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M912 190h-69.9c-9.8 0-19.1 4.5-25.1 12.2L404.7 724.5 207 474a32 32 0 00-25.1-12.2H112c-6.7 0-10.4 7.7-6.3 12.9l273.9 347c12.8 16.2 37.4 16.2 50.3 0l488.4-618.9c4.1-5.1.4-12.8-6.3-12.8z"}}]},name:"check",theme:"outlined"};var AntdIcon=__webpack_require__("./node_modules/@ant-design/icons/es/components/AntdIcon.js"),CheckOutlined_CheckOutlined=function CheckOutlined(props,ref){return react.createElement(AntdIcon.A,(0,esm_extends.A)({},props,{ref,icon:asn_CheckOutlined}))};const icons_CheckOutlined=react.forwardRef(CheckOutlined_CheckOutlined)},"./node_modules/antd/es/progress/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>es_progress});var react=__webpack_require__("./node_modules/react/index.js"),es=__webpack_require__("./node_modules/@ant-design/fast-color/es/index.js"),CheckCircleFilled=__webpack_require__("./node_modules/@ant-design/icons/es/icons/CheckCircleFilled.js"),CheckOutlined=__webpack_require__("./node_modules/@ant-design/icons/es/icons/CheckOutlined.js"),CloseCircleFilled=__webpack_require__("./node_modules/@ant-design/icons/es/icons/CloseCircleFilled.js"),CloseOutlined=__webpack_require__("./node_modules/@ant-design/icons/es/icons/CloseOutlined.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),omit=__webpack_require__("./node_modules/rc-util/es/omit.js"),context=__webpack_require__("./node_modules/antd/es/config-provider/context.js"),esm_extends=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js"),objectSpread2=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),objectWithoutProperties=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),defaultProps={percent:0,prefixCls:"rc-progress",strokeColor:"#2db7f5",strokeLinecap:"round",strokeWidth:1,trailColor:"#D9D9D9",trailWidth:1,gapPosition:"bottom"},useTransitionDuration=function useTransitionDuration(){var pathsRef=(0,react.useRef)([]),prevTimeStamp=(0,react.useRef)(null);return(0,react.useEffect)((function(){var now=Date.now(),updated=!1;pathsRef.current.forEach((function(path){if(path){updated=!0;var pathStyle=path.style;pathStyle.transitionDuration=".3s, .3s, .3s, .06s",prevTimeStamp.current&&now-prevTimeStamp.current<100&&(pathStyle.transitionDuration="0s, 0s")}})),updated&&(prevTimeStamp.current=Date.now())})),pathsRef.current};var esm_typeof=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/typeof.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),canUseDom=__webpack_require__("./node_modules/rc-util/es/Dom/canUseDom.js"),uuid=0,isBrowserClient=(0,canUseDom.A)();const useId=function(id){var _React$useState=react.useState(),_React$useState2=(0,slicedToArray.A)(_React$useState,2),innerId=_React$useState2[0],setInnerId=_React$useState2[1];return react.useEffect((function(){setInnerId("rc_progress_".concat(function getUUID(){var retId;return isBrowserClient?(retId=uuid,uuid+=1):retId="TEST_OR_SSR",retId}()))}),[]),id||innerId};var Block=function Block(_ref){var bg=_ref.bg,children=_ref.children;return react.createElement("div",{style:{width:"100%",height:"100%",background:bg}},children)};function getPtgColors(color,scale){return Object.keys(color).map((function(key){var parsedKey=parseFloat(key),ptgKey="".concat(Math.floor(parsedKey*scale),"%");return"".concat(color[key]," ").concat(ptgKey)}))}const Circle_PtgCircle=react.forwardRef((function(props,ref){var prefixCls=props.prefixCls,color=props.color,gradientId=props.gradientId,radius=props.radius,circleStyleForStack=props.style,ptg=props.ptg,strokeLinecap=props.strokeLinecap,strokeWidth=props.strokeWidth,size=props.size,gapDegree=props.gapDegree,isGradient=color&&"object"===(0,esm_typeof.A)(color),stroke=isGradient?"#FFF":void 0,halfSize=size/2,circleNode=react.createElement("circle",{className:"".concat(prefixCls,"-circle-path"),r:radius,cx:halfSize,cy:halfSize,stroke,strokeLinecap,strokeWidth,opacity:0===ptg?0:1,style:circleStyleForStack,ref});if(!isGradient)return circleNode;var maskId="".concat(gradientId,"-conic"),fromDeg=gapDegree?"".concat(180+gapDegree/2,"deg"):"0deg",conicColors=getPtgColors(color,(360-gapDegree)/360),linearColors=getPtgColors(color,1),conicColorBg="conic-gradient(from ".concat(fromDeg,", ").concat(conicColors.join(", "),")"),linearColorBg="linear-gradient(to ".concat(gapDegree?"bottom":"top",", ").concat(linearColors.join(", "),")");return react.createElement(react.Fragment,null,react.createElement("mask",{id:maskId},circleNode),react.createElement("foreignObject",{x:0,y:0,width:size,height:size,mask:"url(#".concat(maskId,")")},react.createElement(Block,{bg:linearColorBg},react.createElement(Block,{bg:conicColorBg}))))}));var getCircleStyle=function getCircleStyle(perimeter,perimeterWithoutGap,offset,percent,rotateDeg,gapDegree,gapPosition,strokeColor,strokeLinecap,strokeWidth){var stepSpace=arguments.length>10&&void 0!==arguments[10]?arguments[10]:0,offsetDeg=offset/100*360*((360-gapDegree)/360),positionDeg=0===gapDegree?0:{bottom:0,top:180,left:90,right:-90}[gapPosition],strokeDashoffset=(100-percent)/100*perimeterWithoutGap;"round"===strokeLinecap&&100!==percent&&(strokeDashoffset+=strokeWidth/2)>=perimeterWithoutGap&&(strokeDashoffset=perimeterWithoutGap-.01);return{stroke:"string"==typeof strokeColor?strokeColor:void 0,strokeDasharray:"".concat(perimeterWithoutGap,"px ").concat(perimeter),strokeDashoffset:strokeDashoffset+stepSpace,transform:"rotate(".concat(rotateDeg+offsetDeg+positionDeg,"deg)"),transformOrigin:"".concat(50,"px ").concat(50,"px"),transition:"stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s, stroke-width .06s ease .3s, opacity .3s ease 0s",fillOpacity:0}},Circle_excluded=["id","prefixCls","steps","strokeWidth","trailWidth","gapDegree","gapPosition","trailColor","strokeLinecap","style","className","strokeColor","percent"];function toArray(value){var mergedValue=null!=value?value:[];return Array.isArray(mergedValue)?mergedValue:[mergedValue]}const es_Circle=function Circle(props){var _defaultProps$props=(0,objectSpread2.A)((0,objectSpread2.A)({},defaultProps),props),id=_defaultProps$props.id,prefixCls=_defaultProps$props.prefixCls,steps=_defaultProps$props.steps,strokeWidth=_defaultProps$props.strokeWidth,trailWidth=_defaultProps$props.trailWidth,_defaultProps$props$g=_defaultProps$props.gapDegree,gapDegree=void 0===_defaultProps$props$g?0:_defaultProps$props$g,gapPosition=_defaultProps$props.gapPosition,trailColor=_defaultProps$props.trailColor,strokeLinecap=_defaultProps$props.strokeLinecap,style=_defaultProps$props.style,className=_defaultProps$props.className,strokeColor=_defaultProps$props.strokeColor,percent=_defaultProps$props.percent,restProps=(0,objectWithoutProperties.A)(_defaultProps$props,Circle_excluded),mergedId=useId(id),gradientId="".concat(mergedId,"-gradient"),radius=50-strokeWidth/2,perimeter=2*Math.PI*radius,rotateDeg=gapDegree>0?90+gapDegree/2:-90,perimeterWithoutGap=perimeter*((360-gapDegree)/360),_ref="object"===(0,esm_typeof.A)(steps)?steps:{count:steps,gap:2},stepCount=_ref.count,stepGap=_ref.gap,percentList=toArray(percent),strokeColorList=toArray(strokeColor),gradient=strokeColorList.find((function(color){return color&&"object"===(0,esm_typeof.A)(color)})),mergedStrokeLinecap=gradient&&"object"===(0,esm_typeof.A)(gradient)?"butt":strokeLinecap,circleStyle=getCircleStyle(perimeter,perimeterWithoutGap,0,100,rotateDeg,gapDegree,gapPosition,trailColor,mergedStrokeLinecap,strokeWidth),paths=useTransitionDuration();return react.createElement("svg",(0,esm_extends.A)({className:classnames_default()("".concat(prefixCls,"-circle"),className),viewBox:"0 0 ".concat(100," ").concat(100),style,id,role:"presentation"},restProps),!stepCount&&react.createElement("circle",{className:"".concat(prefixCls,"-circle-trail"),r:radius,cx:50,cy:50,stroke:trailColor,strokeLinecap:mergedStrokeLinecap,strokeWidth:trailWidth||strokeWidth,style:circleStyle}),stepCount?function getStepStokeList(){var current=Math.round(stepCount*(percentList[0]/100)),stepPtg=100/stepCount,stackPtg=0;return new Array(stepCount).fill(null).map((function(_,index){var color=index<=current-1?strokeColorList[0]:trailColor,stroke=color&&"object"===(0,esm_typeof.A)(color)?"url(#".concat(gradientId,")"):void 0,circleStyleForStack=getCircleStyle(perimeter,perimeterWithoutGap,stackPtg,stepPtg,rotateDeg,gapDegree,gapPosition,color,"butt",strokeWidth,stepGap);return stackPtg+=100*(perimeterWithoutGap-circleStyleForStack.strokeDashoffset+stepGap)/perimeterWithoutGap,react.createElement("circle",{key:index,className:"".concat(prefixCls,"-circle-path"),r:radius,cx:50,cy:50,stroke,strokeWidth,opacity:1,style:circleStyleForStack,ref:function ref(elem){paths[index]=elem}})}))}():function getStokeList(){var stackPtg=0;return percentList.map((function(ptg,index){var color=strokeColorList[index]||strokeColorList[strokeColorList.length-1],circleStyleForStack=getCircleStyle(perimeter,perimeterWithoutGap,stackPtg,ptg,rotateDeg,gapDegree,gapPosition,color,mergedStrokeLinecap,strokeWidth);return stackPtg+=ptg,react.createElement(Circle_PtgCircle,{key:index,color,ptg,radius,prefixCls,gradientId,style:circleStyleForStack,strokeLinecap:mergedStrokeLinecap,strokeWidth,gapDegree,ref:function ref(elem){paths[index]=elem},size:100})})).reverse()}())};var tooltip=__webpack_require__("./node_modules/antd/es/tooltip/index.js"),colors_es=__webpack_require__("./node_modules/@ant-design/colors/es/index.js");function validProgress(progress){return!progress||progress<0?0:progress>100?100:progress}function getSuccessPercent(_ref){let{success,successPercent}=_ref,percent=successPercent;return success&&"progress"in success&&(percent=success.progress),success&&"percent"in success&&(percent=success.percent),percent}const getSize=(size,type,extra)=>{var _a,_b,_c,_d;let width=-1,height=-1;if("step"===type){const steps=extra.steps,strokeWidth=extra.strokeWidth;"string"==typeof size||void 0===size?(width="small"===size?2:14,height=null!=strokeWidth?strokeWidth:8):"number"==typeof size?[width,height]=[size,size]:[width=14,height=8]=Array.isArray(size)?size:[size.width,size.height],width*=steps}else if("line"===type){const strokeWidth=null==extra?void 0:extra.strokeWidth;"string"==typeof size||void 0===size?height=strokeWidth||("small"===size?6:8):"number"==typeof size?[width,height]=[size,size]:[width=-1,height=8]=Array.isArray(size)?size:[size.width,size.height]}else"circle"!==type&&"dashboard"!==type||("string"==typeof size||void 0===size?[width,height]="small"===size?[60,60]:[120,120]:"number"==typeof size?[width,height]=[size,size]:Array.isArray(size)&&(width=null!==(_b=null!==(_a=size[0])&&void 0!==_a?_a:size[1])&&void 0!==_b?_b:120,height=null!==(_d=null!==(_c=size[0])&&void 0!==_c?_c:size[1])&&void 0!==_d?_d:120));return[width,height]},progress_Circle=props=>{const{prefixCls,trailColor=null,strokeLinecap="round",gapPosition,gapDegree,width:originWidth=120,type,children,success,size=originWidth,steps}=props,[width,height]=getSize(size,"circle");let{strokeWidth}=props;void 0===strokeWidth&&(strokeWidth=Math.max((width=>3/width*100)(width),6));const circleStyle={width,height,fontSize:.15*width+6},realGapDegree=react.useMemo((()=>gapDegree||0===gapDegree?gapDegree:"dashboard"===type?75:void 0),[gapDegree,type]),percentArray=(_ref2=>{let{percent,success,successPercent}=_ref2;const realSuccessPercent=validProgress(getSuccessPercent({success,successPercent}));return[realSuccessPercent,validProgress(validProgress(percent)-realSuccessPercent)]})(props),gapPos=gapPosition||"dashboard"===type&&"bottom"||void 0,isGradient="[object Object]"===Object.prototype.toString.call(props.strokeColor),strokeColor=(_ref3=>{let{success={},strokeColor}=_ref3;const{strokeColor:successColor}=success;return[successColor||colors_es.presetPrimaryColors.green,strokeColor||null]})({success,strokeColor:props.strokeColor}),wrapperClassName=classnames_default()(`${prefixCls}-inner`,{[`${prefixCls}-circle-gradient`]:isGradient}),circleContent=react.createElement(es_Circle,{steps,percent:steps?percentArray[1]:percentArray,strokeWidth,trailWidth:strokeWidth,strokeColor:steps?strokeColor[1]:strokeColor,strokeLinecap,trailColor,prefixCls,gapDegree:realGapDegree,gapPosition:gapPos}),smallCircle=width<=20,node=react.createElement("div",{className:wrapperClassName,style:circleStyle},circleContent,!smallCircle&&children);return smallCircle?react.createElement(tooltip.A,{title:children},node):node};var cssinjs_es=__webpack_require__("./node_modules/@ant-design/cssinjs/es/index.js"),style=__webpack_require__("./node_modules/antd/es/style/index.js"),genStyleUtils=__webpack_require__("./node_modules/antd/es/theme/util/genStyleUtils.js"),cssinjs_utils_es=__webpack_require__("./node_modules/@ant-design/cssinjs-utils/es/index.js");const LineStrokeColorVar="--progress-line-stroke-color",Percent="--progress-percent",genAntProgressActive=isRtl=>{const direction=isRtl?"100%":"-100%";return new cssinjs_es.Mo(`antProgress${isRtl?"RTL":"LTR"}Active`,{"0%":{transform:`translateX(${direction}) scaleX(0)`,opacity:.1},"20%":{transform:`translateX(${direction}) scaleX(0)`,opacity:.5},to:{transform:"translateX(0) scaleX(1)",opacity:0}})},genBaseStyle=token=>{const{componentCls:progressCls,iconCls:iconPrefixCls}=token;return{[progressCls]:Object.assign(Object.assign({},(0,style.dF)(token)),{display:"inline-block","&-rtl":{direction:"rtl"},"&-line":{position:"relative",width:"100%",fontSize:token.fontSize},[`${progressCls}-outer`]:{display:"inline-flex",alignItems:"center",width:"100%"},[`${progressCls}-inner`]:{position:"relative",display:"inline-block",width:"100%",flex:1,overflow:"hidden",verticalAlign:"middle",backgroundColor:token.remainingColor,borderRadius:token.lineBorderRadius},[`${progressCls}-inner:not(${progressCls}-circle-gradient)`]:{[`${progressCls}-circle-path`]:{stroke:token.defaultColor}},[`${progressCls}-success-bg, ${progressCls}-bg`]:{position:"relative",background:token.defaultColor,borderRadius:token.lineBorderRadius,transition:`all ${token.motionDurationSlow} ${token.motionEaseInOutCirc}`},[`${progressCls}-layout-bottom`]:{display:"flex",flexDirection:"column",alignItems:"center",justifyContent:"center",[`${progressCls}-text`]:{width:"max-content",marginInlineStart:0,marginTop:token.marginXXS}},[`${progressCls}-bg`]:{overflow:"hidden","&::after":{content:'""',background:{_multi_value_:!0,value:["inherit","var(--progress-line-stroke-color)"]},height:"100%",width:"calc(1 / var(--progress-percent) * 100%)",display:"block"},[`&${progressCls}-bg-inner`]:{minWidth:"max-content","&::after":{content:"none"},[`${progressCls}-text-inner`]:{color:token.colorWhite,[`&${progressCls}-text-bright`]:{color:"rgba(0, 0, 0, 0.45)"}}}},[`${progressCls}-success-bg`]:{position:"absolute",insetBlockStart:0,insetInlineStart:0,backgroundColor:token.colorSuccess},[`${progressCls}-text`]:{display:"inline-block",marginInlineStart:token.marginXS,color:token.colorText,lineHeight:1,width:"2em",whiteSpace:"nowrap",textAlign:"start",verticalAlign:"middle",wordBreak:"normal",[iconPrefixCls]:{fontSize:token.fontSize},[`&${progressCls}-text-outer`]:{width:"max-content"},[`&${progressCls}-text-outer${progressCls}-text-start`]:{width:"max-content",marginInlineStart:0,marginInlineEnd:token.marginXS}},[`${progressCls}-text-inner`]:{display:"flex",justifyContent:"center",alignItems:"center",width:"100%",height:"100%",marginInlineStart:0,padding:`0 ${(0,cssinjs_es.zA)(token.paddingXXS)}`,[`&${progressCls}-text-start`]:{justifyContent:"start"},[`&${progressCls}-text-end`]:{justifyContent:"end"}},[`&${progressCls}-status-active`]:{[`${progressCls}-bg::before`]:{position:"absolute",inset:0,backgroundColor:token.colorBgContainer,borderRadius:token.lineBorderRadius,opacity:0,animationName:genAntProgressActive(),animationDuration:token.progressActiveMotionDuration,animationTimingFunction:token.motionEaseOutQuint,animationIterationCount:"infinite",content:'""'}},[`&${progressCls}-rtl${progressCls}-status-active`]:{[`${progressCls}-bg::before`]:{animationName:genAntProgressActive(!0)}},[`&${progressCls}-status-exception`]:{[`${progressCls}-bg`]:{backgroundColor:token.colorError},[`${progressCls}-text`]:{color:token.colorError}},[`&${progressCls}-status-exception ${progressCls}-inner:not(${progressCls}-circle-gradient)`]:{[`${progressCls}-circle-path`]:{stroke:token.colorError}},[`&${progressCls}-status-success`]:{[`${progressCls}-bg`]:{backgroundColor:token.colorSuccess},[`${progressCls}-text`]:{color:token.colorSuccess}},[`&${progressCls}-status-success ${progressCls}-inner:not(${progressCls}-circle-gradient)`]:{[`${progressCls}-circle-path`]:{stroke:token.colorSuccess}}})}},genCircleStyle=token=>{const{componentCls:progressCls,iconCls:iconPrefixCls}=token;return{[progressCls]:{[`${progressCls}-circle-trail`]:{stroke:token.remainingColor},[`&${progressCls}-circle ${progressCls}-inner`]:{position:"relative",lineHeight:1,backgroundColor:"transparent"},[`&${progressCls}-circle ${progressCls}-text`]:{position:"absolute",insetBlockStart:"50%",insetInlineStart:0,width:"100%",margin:0,padding:0,color:token.circleTextColor,fontSize:token.circleTextFontSize,lineHeight:1,whiteSpace:"normal",textAlign:"center",transform:"translateY(-50%)",[iconPrefixCls]:{fontSize:token.circleIconFontSize}},[`${progressCls}-circle&-status-exception`]:{[`${progressCls}-text`]:{color:token.colorError}},[`${progressCls}-circle&-status-success`]:{[`${progressCls}-text`]:{color:token.colorSuccess}}},[`${progressCls}-inline-circle`]:{lineHeight:1,[`${progressCls}-inner`]:{verticalAlign:"bottom"}}}},genStepStyle=token=>{const{componentCls:progressCls}=token;return{[progressCls]:{[`${progressCls}-steps`]:{display:"inline-block","&-outer":{display:"flex",flexDirection:"row",alignItems:"center"},"&-item":{flexShrink:0,minWidth:token.progressStepMinWidth,marginInlineEnd:token.progressStepMarginInlineEnd,backgroundColor:token.remainingColor,transition:`all ${token.motionDurationSlow}`,"&-active":{backgroundColor:token.defaultColor}}}}}},genSmallLine=token=>{const{componentCls:progressCls,iconCls:iconPrefixCls}=token;return{[progressCls]:{[`${progressCls}-small&-line, ${progressCls}-small&-line ${progressCls}-text ${iconPrefixCls}`]:{fontSize:token.fontSizeSM}}}},progress_style=(0,genStyleUtils.OF)("Progress",(token=>{const progressStepMarginInlineEnd=token.calc(token.marginXXS).div(2).equal(),progressToken=(0,cssinjs_utils_es.oX)(token,{progressStepMarginInlineEnd,progressStepMinWidth:progressStepMarginInlineEnd,progressActiveMotionDuration:"2.4s"});return[genBaseStyle(progressToken),genCircleStyle(progressToken),genStepStyle(progressToken),genSmallLine(progressToken)]}),(token=>({circleTextColor:token.colorText,defaultColor:token.colorInfo,remainingColor:token.colorFillSecondary,lineBorderRadius:100,circleTextFontSize:"1em",circleIconFontSize:token.fontSize/token.fontSizeSM+"em"})));var __rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};const handleGradient=(strokeColor,directionConfig)=>{const{from=colors_es.presetPrimaryColors.blue,to=colors_es.presetPrimaryColors.blue,direction="rtl"===directionConfig?"to left":"to right"}=strokeColor,rest=__rest(strokeColor,["from","to","direction"]);if(0!==Object.keys(rest).length){const background=`linear-gradient(${direction}, ${(gradients=>{let tempArr=[];return Object.keys(gradients).forEach((key=>{const formattedKey=parseFloat(key.replace(/%/g,""));Number.isNaN(formattedKey)||tempArr.push({key:formattedKey,value:gradients[key]})})),tempArr=tempArr.sort(((a,b)=>a.key-b.key)),tempArr.map((_ref=>{let{key,value}=_ref;return`${value} ${key}%`})).join(", ")})(rest)})`;return{background,[LineStrokeColorVar]:background}}const background=`linear-gradient(${direction}, ${from}, ${to})`;return{background,[LineStrokeColorVar]:background}},progress_Line=props=>{const{prefixCls,direction:directionConfig,percent,size,strokeWidth,strokeColor,strokeLinecap="round",children,trailColor=null,percentPosition,success}=props,{align:infoAlign,type:infoPosition}=percentPosition,backgroundProps=strokeColor&&"string"!=typeof strokeColor?handleGradient(strokeColor,directionConfig):{[LineStrokeColorVar]:strokeColor,background:strokeColor},borderRadius="square"===strokeLinecap||"butt"===strokeLinecap?0:void 0,mergedSize=null!=size?size:[-1,strokeWidth||("small"===size?6:8)],[width,height]=getSize(mergedSize,"line",{strokeWidth});const trailStyle={backgroundColor:trailColor||void 0,borderRadius},percentStyle=Object.assign(Object.assign({width:`${validProgress(percent)}%`,height,borderRadius},backgroundProps),{[Percent]:validProgress(percent)/100}),successPercent=getSuccessPercent(props),successPercentStyle={width:`${validProgress(successPercent)}%`,height,borderRadius,backgroundColor:null==success?void 0:success.strokeColor},outerStyle={width:width<0?"100%":width},lineInner=react.createElement("div",{className:`${prefixCls}-inner`,style:trailStyle},react.createElement("div",{className:classnames_default()(`${prefixCls}-bg`,`${prefixCls}-bg-${infoPosition}`),style:percentStyle},"inner"===infoPosition&&children),void 0!==successPercent&&react.createElement("div",{className:`${prefixCls}-success-bg`,style:successPercentStyle})),isOuterStart="outer"===infoPosition&&"start"===infoAlign,isOuterEnd="outer"===infoPosition&&"end"===infoAlign;return"outer"===infoPosition&&"center"===infoAlign?react.createElement("div",{className:`${prefixCls}-layout-bottom`},lineInner,children):react.createElement("div",{className:`${prefixCls}-outer`,style:outerStyle},isOuterStart&&children,lineInner,isOuterEnd&&children)},progress_Steps=props=>{const{size,steps,rounding:customRounding=Math.round,percent=0,strokeWidth=8,strokeColor,trailColor=null,prefixCls,children}=props,current=customRounding(steps*(percent/100)),mergedSize=null!=size?size:["small"===size?2:14,strokeWidth],[width,height]=getSize(mergedSize,"step",{steps,strokeWidth}),unitWidth=width/steps,styledSteps=Array.from({length:steps});for(let i=0;i<steps;i++){const color=Array.isArray(strokeColor)?strokeColor[i]:strokeColor;styledSteps[i]=react.createElement("div",{key:i,className:classnames_default()(`${prefixCls}-steps-item`,{[`${prefixCls}-steps-item-active`]:i<=current-1}),style:{backgroundColor:i<=current-1?color:trailColor,width:unitWidth,height}})}return react.createElement("div",{className:`${prefixCls}-steps-outer`},styledSteps,children)};var progress_rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};const ProgressStatuses=["normal","exception","active","success"],Progress=react.forwardRef(((props,ref)=>{const{prefixCls:customizePrefixCls,className,rootClassName,steps,strokeColor,percent=0,size="default",showInfo=!0,type="line",status,format,style,percentPosition={}}=props,restProps=progress_rest(props,["prefixCls","className","rootClassName","steps","strokeColor","percent","size","showInfo","type","status","format","style","percentPosition"]),{align:infoAlign="end",type:infoPosition="outer"}=percentPosition,strokeColorNotArray=Array.isArray(strokeColor)?strokeColor[0]:strokeColor,strokeColorNotGradient="string"==typeof strokeColor||Array.isArray(strokeColor)?strokeColor:void 0,strokeColorIsBright=react.useMemo((()=>{if(strokeColorNotArray){const color="string"==typeof strokeColorNotArray?strokeColorNotArray:Object.values(strokeColorNotArray)[0];return new es.Y(color).isLight()}return!1}),[strokeColor]),percentNumber=react.useMemo((()=>{var _a,_b;const successPercent=getSuccessPercent(props);return parseInt(void 0!==successPercent?null===(_a=null!=successPercent?successPercent:0)||void 0===_a?void 0:_a.toString():null===(_b=null!=percent?percent:0)||void 0===_b?void 0:_b.toString(),10)}),[percent,props.success,props.successPercent]),progressStatus=react.useMemo((()=>!ProgressStatuses.includes(status)&&percentNumber>=100?"success":status||"normal"),[status,percentNumber]),{getPrefixCls,direction,progress:progressStyle}=react.useContext(context.QO),prefixCls=getPrefixCls("progress",customizePrefixCls),[wrapCSSVar,hashId,cssVarCls]=progress_style(prefixCls),isLineType="line"===type,isPureLineType=isLineType&&!steps,progressInfo=react.useMemo((()=>{if(!showInfo)return null;const successPercent=getSuccessPercent(props);let text;const isBrightInnerColor=isLineType&&strokeColorIsBright&&"inner"===infoPosition;return"inner"===infoPosition||format||"exception"!==progressStatus&&"success"!==progressStatus?text=(format||(number=>`${number}%`))(validProgress(percent),validProgress(successPercent)):"exception"===progressStatus?text=isLineType?react.createElement(CloseCircleFilled.A,null):react.createElement(CloseOutlined.A,null):"success"===progressStatus&&(text=isLineType?react.createElement(CheckCircleFilled.A,null):react.createElement(CheckOutlined.A,null)),react.createElement("span",{className:classnames_default()(`${prefixCls}-text`,{[`${prefixCls}-text-bright`]:isBrightInnerColor,[`${prefixCls}-text-${infoAlign}`]:isPureLineType,[`${prefixCls}-text-${infoPosition}`]:isPureLineType}),title:"string"==typeof text?text:void 0},text)}),[showInfo,percent,percentNumber,progressStatus,type,prefixCls,format]);let progress;"line"===type?progress=steps?react.createElement(progress_Steps,Object.assign({},props,{strokeColor:strokeColorNotGradient,prefixCls,steps:"object"==typeof steps?steps.count:steps}),progressInfo):react.createElement(progress_Line,Object.assign({},props,{strokeColor:strokeColorNotArray,prefixCls,direction,percentPosition:{align:infoAlign,type:infoPosition}}),progressInfo):"circle"!==type&&"dashboard"!==type||(progress=react.createElement(progress_Circle,Object.assign({},props,{strokeColor:strokeColorNotArray,prefixCls,progressStatus}),progressInfo));const classString=classnames_default()(prefixCls,`${prefixCls}-status-${progressStatus}`,{[`${prefixCls}-${"dashboard"===type?"circle":type}`]:"line"!==type,[`${prefixCls}-inline-circle`]:"circle"===type&&getSize(size,"circle")[0]<=20,[`${prefixCls}-line`]:isPureLineType,[`${prefixCls}-line-align-${infoAlign}`]:isPureLineType,[`${prefixCls}-line-position-${infoPosition}`]:isPureLineType,[`${prefixCls}-steps`]:steps,[`${prefixCls}-show-info`]:showInfo,[`${prefixCls}-${size}`]:"string"==typeof size,[`${prefixCls}-rtl`]:"rtl"===direction},null==progressStyle?void 0:progressStyle.className,className,rootClassName,hashId,cssVarCls);return wrapCSSVar(react.createElement("div",Object.assign({ref,style:Object.assign(Object.assign({},null==progressStyle?void 0:progressStyle.style),style),className:classString,role:"progressbar","aria-valuenow":percentNumber,"aria-valuemin":0,"aria-valuemax":100},(0,omit.A)(restProps,["trailColor","strokeWidth","width","gapDegree","gapPosition","strokeLinecap","success","successPercent"])),progress))}));const es_progress=Progress}}]);