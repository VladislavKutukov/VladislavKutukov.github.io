/*! For license information please see ECOPRO-components-Checkbox-stories.5c38eca5.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkmy_button_project=self.webpackChunkmy_button_project||[]).push([[3234],{"./node_modules/react/cjs/react-jsx-runtime.production.js":(__unused_webpack_module,exports)=>{var REACT_ELEMENT_TYPE=Symbol.for("react.transitional.element"),REACT_FRAGMENT_TYPE=Symbol.for("react.fragment");function jsxProd(type,config,maybeKey){var key=null;if(void 0!==maybeKey&&(key=""+maybeKey),void 0!==config.key&&(key=""+config.key),"key"in config)for(var propName in maybeKey={},config)"key"!==propName&&(maybeKey[propName]=config[propName]);else maybeKey=config;return config=maybeKey.ref,{$$typeof:REACT_ELEMENT_TYPE,type,key,ref:void 0!==config?config:null,props:maybeKey}}exports.Fragment=REACT_FRAGMENT_TYPE,exports.jsx=jsxProd,exports.jsxs=jsxProd},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.js")},"./src/ECOPRO/components/Checkbox.stories.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function joinClassNames(){let classNames=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];if(classNames){const classNamesLength=classNames.length,arr=[];for(let i=0;i<classNamesLength;i+=1){const cls=classNames[i];if(cls)if("object"==typeof cls)for(const[k,v]of Object.entries(cls))v&&arr.push(k);else arr.push(cls)}return arr.join(" ")}return""}__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CheckedWithLabel:()=>CheckedWithLabel,CheckedWithLineType:()=>CheckedWithLineType,Default:()=>Default,Disabled:()=>Disabled,DisabledAndCheckedWithLabel:()=>DisabledAndCheckedWithLabel,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Checkbox_stories});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function Checkbox_Checkbox(_ref){let{className,disabled,checked,name,onChange,label,markType}=_ref;return(0,jsx_runtime.jsxs)("label",{className:joinClassNames(["checkbox",className]),children:[(0,jsx_runtime.jsx)("input",{type:"checkbox",checked,name,disabled,onChange}),"line"===markType?(0,jsx_runtime.jsx)("span",{className:"checkbox__line"}):(0,jsx_runtime.jsx)("span",{className:"checkbox__checkmark"}),label&&(0,jsx_runtime.jsx)("span",{className:"checkbox__label",children:label})]})}Checkbox_Checkbox.defaultProps={className:"",disabled:!1,checked:!1,name:"checkbox",onChange:()=>{},label:""};const components_Checkbox=Checkbox_Checkbox;Checkbox_Checkbox.__docgenInfo={description:"",methods:[],displayName:"Checkbox",props:{className:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'""',computed:!1}},disabled:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},checked:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},name:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"checkbox"',computed:!1}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: React.ChangeEvent<HTMLInputElement>) => void",signature:{arguments:[{type:{name:"ReactChangeEvent",raw:"React.ChangeEvent<HTMLInputElement>",elements:[{name:"HTMLInputElement"}]},name:"event"}],return:{name:"void"}}},description:"",defaultValue:{value:"() => {}",computed:!1}},label:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'""',computed:!1}},markType:{required:!1,tsType:{name:"union",raw:'"line" | "checkmark"',elements:[{name:"literal",value:'"line"'},{name:"literal",value:'"checkmark"'}]},description:""}}};const Checkbox_stories={title:"ECOPRO/Checkbox",component:components_Checkbox,argTypes:{className:{description:"Имя класса. Для задания дополнительных стилей",defaultValue:"",table:{type:{summary:"string"},defaultValue:{summary:""}},control:{type:"text"}},disabled:{description:"Блокировка инпута",defaultValue:!1,table:{type:{summary:"boolean"},defaultValue:{summary:!1}},control:{type:"boolean"}},name:{description:"Имя",defaultValue:"inputName",table:{type:{summary:"string"},defaultValue:{summary:"inputName"}},control:{type:"text"}},onChange:{description:"Обработка события клика",defaultValue:null,table:{type:{summary:"function"},defaultValue:{summary:null}}},checked:{description:"Состояние инпута",defaultValue:!1,table:{type:{summary:"boolean"},defaultValue:{summary:!1}},control:{type:"boolean"}},label:{description:"Подпись к инпуту",defaultValue:"",table:{type:{summary:"string"},defaultValue:{summary:""}},control:{type:"text"}},markType:{description:"Тип маркера для чекбокса",defaultValue:"",table:{type:{summary:"string"},defaultValue:{summary:""}},control:{type:"text"}}}},Template=args=>(0,jsx_runtime.jsx)(components_Checkbox,{...args}),Default=Template.bind({}),CheckedWithLabel=Template.bind({});CheckedWithLabel.args={checked:!0,name:"input1",label:"label"};const CheckedWithLineType=Template.bind({});CheckedWithLineType.args={checked:!0,name:"input2",label:"label",markType:"line"};const Disabled=Template.bind({});Disabled.args={disabled:!0,name:"input3"};const DisabledAndCheckedWithLabel=Template.bind({});DisabledAndCheckedWithLabel.args={disabled:!0,checked:!0,name:"input4",label:"label"};const __namedExportsOrder=["Default","CheckedWithLabel","CheckedWithLineType","Disabled","DisabledAndCheckedWithLabel"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => <Checkbox {...args} />",...Default.parameters?.docs?.source}}},CheckedWithLabel.parameters={...CheckedWithLabel.parameters,docs:{...CheckedWithLabel.parameters?.docs,source:{originalSource:"args => <Checkbox {...args} />",...CheckedWithLabel.parameters?.docs?.source}}},CheckedWithLineType.parameters={...CheckedWithLineType.parameters,docs:{...CheckedWithLineType.parameters?.docs,source:{originalSource:"args => <Checkbox {...args} />",...CheckedWithLineType.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"args => <Checkbox {...args} />",...Disabled.parameters?.docs?.source}}},DisabledAndCheckedWithLabel.parameters={...DisabledAndCheckedWithLabel.parameters,docs:{...DisabledAndCheckedWithLabel.parameters?.docs,source:{originalSource:"args => <Checkbox {...args} />",...DisabledAndCheckedWithLabel.parameters?.docs?.source}}}}}]);